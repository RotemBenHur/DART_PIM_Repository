This project is a RISC-V CPU simulation implemented by Lior Kaplun and Idan Magram which simulates:
Wanger Fischer simulation:
    simulates calculation of 1000 WF of a read and sub-reference segment on a RISC-V simulation environment (Gem5)

    to run:
        1. first download gem5 simulator https://github.com/ppeetteerrs/gem5-RISC-V-FS-Linux
        2. riscv64-unknown-linux-gnu-g++ -std=c++17 -O3 <simulationDir>/WF_sim.cpp -static -o WF_sim
        3. cd to gem5 wd and run sudo build/riscv/gem5.opt --outdir=out_results
        <simulationDir>/multicore_with_1L2_0L3_simple.py --binary WF_sim
        4. The results will be shown at out_results/stats.txt
        5. divide by 1000 the simulation time for the time of one WF

manager simulation:
    There is a predefined list with minimizers the CPU is responsible for.
    Will find minimizers of each read.
    Calculate the readâ€™s potential location of the minimizers from the list. (using WF)
    Send the other minimizers and the read to the DART-PIM and receive back the results.
    Decide which is the best candidate over all results
    Reconstruct the Genome

    to run:
        1. riscv64-unknown-linux-gnu-g++ -std=c++17 -O3 <simulationDir>/manager.cpp -static -o manager
        2. cd to gem5 wd and run  sudo build/riscv/gem5.opt --outdir=simple_ou
           <simulationDir>/multicore_with_1L2_0L3.py --binary wd/manager
           --args "-reads <simulationDir>/reads_R1_25.fastq  -mins <simulationDir>/riscv_cpu_mins.txt
           -pim <simulationDir>/readsMappings_090524.txt"
        3. The results will be shown at out_results/stats.txt